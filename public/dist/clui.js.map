{"version":3,"file":"clui.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/tests/clui_many_commands.ts","../../src/tests/clui_one_command.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/converter.ts","../../src/lib/parser.ts","../../src/lib/matcher.ts","../../src/lib/runner.ts","../../node_modules/fuse.js/dist/fuse.esm.js","../../src/lib/searcher.ts","../../src/clui.ts","../../src/Clui.svelte"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached\n    const children = target.childNodes;\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        const seqLen = upper_bound(1, longest + 1, idx => children[m[idx]].claim_order, current) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        if (node !== target.actual_end_child) {\n            target.insertBefore(node, target.actual_end_child);\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append(target, node);\n    }\n    else if (node.parentNode !== target || (anchor && node.nextSibling !== anchor)) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n    }, () => svg ? svg_element(name) : element(name));\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        node.data = '' + data;\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTag();\n    }\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    return new HtmlTag(html_tag_nodes.slice(1, html_tag_nodes.length - 1));\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(claimed_nodes) {\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            if (this.l) {\n                this.n = this.l;\n            }\n            else {\n                this.h(html);\n            }\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.3' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import git from './clui_one_command';\nexport default [git, { name: 'npm' }, { name: 'node' }];\n","const push = {\n    name: 'push',\n    description: 'push local changes to git remote [test]',\n    type: 'arg',\n    children: [\n        {\n            name: 'remote',\n            description: 'the name of the remote to push changes to',\n            required: true,\n            type: 'string',\n            mode: 'arg'\n        },\n        {\n            name: 'branch',\n            description: 'the name of the branch to push changes to',\n            required: true,\n            type: 'string',\n            mode: 'arg'\n        },\n        {\n            name: 'force',\n            description: 'forces the push of unrelated histories',\n            type: 'boolean',\n            mode: 'opt'\n        }\n    ],\n    run: (ctx, args) => {\n        ctx.done(true);\n    }\n};\nconst git = {\n    name: 'git',\n    description: 'a simple git cli [test]',\n    type: 'cmd',\n    children: [push]\n};\nexport default git;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Command, Arg } from \"../clui\";\nconst convert = (cmd) => {\n    cmd = new Command(cmd, false);\n    if (cmd.children && cmd.type === 'cmd') {\n        let list = [];\n        for (let item of cmd.children) {\n            list.push(convert(item));\n        }\n        cmd.children = list;\n    }\n    else if (cmd.children && cmd.type === 'arg') {\n        let list = [];\n        for (let item of cmd.children) {\n            list.push(new Arg(item));\n        }\n        cmd.children = list;\n    }\n    return cmd;\n};\nexport default convert;\n","class Tokens extends Array {\n}\nfunction parse(input, cursor) {\n    const tokens = new Tokens();\n    let i = 0;\n    const peek = () => input.charAt(i);\n    const next = () => input.charAt(i++);\n    const eof = () => peek() === \"\";\n    const croak = (err) => { throw err; };\n    const isId = (ch) => /[a-z_]/i.test(ch);\n    const isFlag = (ch) => \"-\".indexOf(ch) >= 0;\n    const isBool = (word) => \"true false\".indexOf(word) >= 0;\n    const isStr = (ch) => `\"'`.indexOf(ch) >= 0;\n    const isNum = (ch) => /[0-9]/.test(ch);\n    const add = (token, i) => {\n        const { type, val } = Object.assign({}, token);\n        if (cursor && cursor.start !== undefined) {\n            if (cursor.end === undefined)\n                cursor.end = cursor.start;\n            tokens.push({ type, val, cursor: i - val.length <= cursor.end && i >= cursor.start });\n        }\n        else {\n            tokens.push({ type, val });\n        }\n    };\n    const take = (fn) => {\n        let token = \"\";\n        while (!eof() && fn(peek()))\n            token += next();\n        return token;\n    };\n    while (!eof()) {\n        const ch = next();\n        if (ch === \" \")\n            continue;\n        if (isId(ch)) {\n            const id = ch + take(isId);\n            if (isBool(id))\n                add({ type: \"boolean\", val: Boolean(id) }, i);\n            else\n                add({ type: \"cmd\", val: id }, i);\n        }\n        else if (isFlag(ch)) {\n            const flag = ch + take(isFlag);\n            if (flag.length === 1)\n                add({ type: \"opt\", val: next() }, i);\n            else if (flag.length === 2)\n                add({ type: \"opt\", val: take(isId) }, i);\n            else\n                croak(Error(`too many recurring \"-\" in flag`));\n        }\n        else if (isStr(ch)) {\n            add({ type: \"string\", val: take(val => val !== ch) }, i);\n            next();\n        }\n        else if (isNum(ch)) {\n            let decimal = false;\n            const num = ch + take(val => {\n                if (val === \".\") {\n                    if (decimal)\n                        croak(Error(`too many recurring \".\" in number`));\n                    decimal = true;\n                    return true;\n                }\n                return isNum(val);\n            });\n            add({ type: \"number\", val: Number(num) }, i);\n        }\n    }\n    return tokens;\n}\nexport default parse;\n","import { Command, Arg } from '../clui';\nimport clui from '../clui';\nexport default function (root, tokens) {\n    var _a;\n    let list = [];\n    if (root instanceof clui)\n        root = new Command({ name: 'h', type: 'cmd', children: (_a = root.commands) !== null && _a !== void 0 ? _a : [] });\n    if (root instanceof Command) {\n        let cmd = root;\n        let argIndex;\n        for (let i = 0; i < tokens.length; i++) {\n            let token = tokens[i];\n            if (cmd instanceof Command && cmd.type && cmd.children !== undefined) {\n                if (cmd.type === 'cmd') {\n                    let find = cmd.children.find((el) => el.name === token.val);\n                    if (find) {\n                        cmd = find;\n                        list.push(cmd);\n                    }\n                    else {\n                        list.push(...tokens.slice(i).map(el => { return Object.assign(Object.assign({}, el), { unknown: true }); }));\n                        return list;\n                    }\n                }\n                else if (cmd.type === 'arg') {\n                    if (argIndex === undefined)\n                        argIndex = i;\n                    list.push(new Arg(Object.assign(Object.assign({}, cmd.children[i - argIndex]), { value: token.type === 'opt' || token.val })));\n                }\n            }\n            else {\n                return list;\n            }\n        }\n        return list;\n    }\n    else {\n        throw new Error('Invalid root type (root has to be a Command)');\n    }\n}\n","import { Command, Arg, default as CLUI } from '../clui';\nimport parse from './parser';\nimport match from './matcher';\nexport default function (root, tokens) {\n    var _a;\n    if (typeof tokens === 'string')\n        tokens = match(root, parse(tokens));\n    if (root instanceof CLUI)\n        root = new Command({ name: 'h', type: 'cmd', children: (_a = root.commands) !== null && _a !== void 0 ? _a : [] });\n    if (tokens[0] instanceof Command || root instanceof Command) {\n        let commands = tokens.filter(el => el instanceof Command);\n        const command = commands.length > 0 ? commands[commands.length - 1] : root;\n        let args = tokens.filter(el => el instanceof Arg);\n        if (command) {\n            let allRequired = true;\n            if (command.type === 'arg' && command.children !== undefined) {\n                let required = command.children.filter((el) => el.required).length;\n                allRequired = required === args.filter((el) => el.required).length;\n            }\n            return new Promise((resolve, reject) => {\n                if (!allRequired)\n                    resolve({ success: false, output: 'Error: Missing required arguments' });\n                const ctx = {\n                    command,\n                    done: (success, ...output) => {\n                        resolve({ success, output });\n                    }\n                };\n                if (command.run)\n                    command.run(ctx, args);\n                else\n                    resolve({ success: false, output: 'Error: Command has no run function' });\n            });\n        }\n        else\n            ;\n    }\n    else\n        return new Promise((resolve, reject) => resolve({ success: false, output: 'Error: Command not found' }));\n}\n;\n","/**\n * Fuse.js v6.4.6 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2021 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction isArray(value) {\n  return !Array.isArray\n    ? getTag(value) === '[object Array]'\n    : Array.isArray(value)\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\nconst INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value\n  }\n  let result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value)\n}\n\nfunction isString(value) {\n  return typeof value === 'string'\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number'\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\nfunction isBoolean(value) {\n  return (\n    value === true ||\n    value === false ||\n    (isObjectLike(value) && getTag(value) == '[object Boolean]')\n  )\n}\n\nfunction isObject(value) {\n  return typeof value === 'object'\n}\n\n// Checks if `value` is object-like.\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null\n}\n\nfunction isBlank(value) {\n  return !value.trim().length\n}\n\n// Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\nfunction getTag(value) {\n  return value == null\n    ? value === undefined\n      ? '[object Undefined]'\n      : '[object Null]'\n    : Object.prototype.toString.call(value)\n}\n\nconst EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\n\nconst INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\n\nconst LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>\n  `Invalid value for key ${key}`;\n\nconst PATTERN_LENGTH_TOO_LARGE = (max) =>\n  `Pattern length exceeds max of ${max}.`;\n\nconst MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;\n\nconst INVALID_KEY_WEIGHT_VALUE = (key) =>\n  `Property 'weight' in key '${key}' must be a positive integer`;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nclass KeyStore {\n  constructor(keys) {\n    this._keys = [];\n    this._keyMap = {};\n\n    let totalWeight = 0;\n\n    keys.forEach((key) => {\n      let obj = createKey(key);\n\n      totalWeight += obj.weight;\n\n      this._keys.push(obj);\n      this._keyMap[obj.id] = obj;\n\n      totalWeight += obj.weight;\n    });\n\n    // Normalize weights so that their sum is equal to 1\n    this._keys.forEach((key) => {\n      key.weight /= totalWeight;\n    });\n  }\n  get(keyId) {\n    return this._keyMap[keyId]\n  }\n  keys() {\n    return this._keys\n  }\n  toJSON() {\n    return JSON.stringify(this._keys)\n  }\n}\n\nfunction createKey(key) {\n  let path = null;\n  let id = null;\n  let src = null;\n  let weight = 1;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'))\n    }\n\n    const name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name))\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n  }\n\n  return { path, id, weight, src }\n}\n\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.')\n}\n\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key\n}\n\nfunction get(obj, path) {\n  let list = [];\n  let arr = false;\n\n  const deepGet = (obj, path, index) => {\n    if (!isDefined(obj)) {\n      return\n    }\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      let key = path[index];\n\n      const value = obj[key];\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n      if (\n        index === path.length - 1 &&\n        (isString(value) || isNumber(value) || isBoolean(value))\n      ) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true;\n        // Search each item in the array.\n        for (let i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  };\n\n  // Backwards compatibility (since path used to be a string)\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n\n  return arr ? list : list[0]\n}\n\nconst MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\n\nconst BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: (a, b) =>\n    a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1\n};\n\nconst FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\n\nconst AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false\n};\n\nvar Config = {\n  ...BasicOptions,\n  ...MatchOptions,\n  ...FuzzyOptions,\n  ...AdvancedOptions\n};\n\nconst SPACE = /[^ ]+/g;\n\n// Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\nfunction norm(mantissa = 3) {\n  const cache = new Map();\n  const m = Math.pow(10, mantissa);\n\n  return {\n    get(value) {\n      const numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens)\n      }\n\n      const norm = 1 / Math.sqrt(numTokens);\n\n      // In place of `toFixed(mantissa)`, for faster computation\n      const n = parseFloat(Math.round(norm * m) / m);\n\n      cache.set(numTokens, n);\n\n      return n\n    },\n    clear() {\n      cache.clear();\n    }\n  }\n}\n\nclass FuseIndex {\n  constructor({ getFn = Config.getFn } = {}) {\n    this.norm = norm(3);\n    this.getFn = getFn;\n    this.isCreated = false;\n\n    this.setIndexRecords();\n  }\n  setSources(docs = []) {\n    this.docs = docs;\n  }\n  setIndexRecords(records = []) {\n    this.records = records;\n  }\n  setKeys(keys = []) {\n    this.keys = keys;\n    this._keysMap = {};\n    keys.forEach((key, idx) => {\n      this._keysMap[key.id] = idx;\n    });\n  }\n  create() {\n    if (this.isCreated || !this.docs.length) {\n      return\n    }\n\n    this.isCreated = true;\n\n    // List is Array<String>\n    if (isString(this.docs[0])) {\n      this.docs.forEach((doc, docIndex) => {\n        this._addString(doc, docIndex);\n      });\n    } else {\n      // List is Array<Object>\n      this.docs.forEach((doc, docIndex) => {\n        this._addObject(doc, docIndex);\n      });\n    }\n\n    this.norm.clear();\n  }\n  // Adds a doc to the end of the index\n  add(doc) {\n    const idx = this.size();\n\n    if (isString(doc)) {\n      this._addString(doc, idx);\n    } else {\n      this._addObject(doc, idx);\n    }\n  }\n  // Removes the doc at the specified index of the index\n  removeAt(idx) {\n    this.records.splice(idx, 1);\n\n    // Change ref index of every subsquent doc\n    for (let i = idx, len = this.size(); i < len; i += 1) {\n      this.records[i].i -= 1;\n    }\n  }\n  getValueForItemAtKeyId(item, keyId) {\n    return item[this._keysMap[keyId]]\n  }\n  size() {\n    return this.records.length\n  }\n  _addString(doc, docIndex) {\n    if (!isDefined(doc) || isBlank(doc)) {\n      return\n    }\n\n    let record = {\n      v: doc,\n      i: docIndex,\n      n: this.norm.get(doc)\n    };\n\n    this.records.push(record);\n  }\n  _addObject(doc, docIndex) {\n    let record = { i: docIndex, $: {} };\n\n    // Iterate over every key (i.e, path), and fetch the value at that key\n    this.keys.forEach((key, keyIndex) => {\n      // console.log(key)\n      let value = this.getFn(doc, key.path);\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      if (isArray(value)) {\n        let subRecords = [];\n        const stack = [{ nestedArrIndex: -1, value }];\n\n        while (stack.length) {\n          const { nestedArrIndex, value } = stack.pop();\n\n          if (!isDefined(value)) {\n            continue\n          }\n\n          if (isString(value) && !isBlank(value)) {\n            let subRecord = {\n              v: value,\n              i: nestedArrIndex,\n              n: this.norm.get(value)\n            };\n\n            subRecords.push(subRecord);\n          } else if (isArray(value)) {\n            value.forEach((item, k) => {\n              stack.push({\n                nestedArrIndex: k,\n                value: item\n              });\n            });\n          }\n        }\n        record.$[keyIndex] = subRecords;\n      } else if (!isBlank(value)) {\n        let subRecord = {\n          v: value,\n          n: this.norm.get(value)\n        };\n\n        record.$[keyIndex] = subRecord;\n      }\n    });\n\n    this.records.push(record);\n  }\n  toJSON() {\n    return {\n      keys: this.keys,\n      records: this.records\n    }\n  }\n}\n\nfunction createIndex(keys, docs, { getFn = Config.getFn } = {}) {\n  const myIndex = new FuseIndex({ getFn });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex\n}\n\nfunction parseIndex(data, { getFn = Config.getFn } = {}) {\n  const { keys, records } = data;\n  const myIndex = new FuseIndex({ getFn });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex\n}\n\nfunction computeScore(\n  pattern,\n  {\n    errors = 0,\n    currentLocation = 0,\n    expectedLocation = 0,\n    distance = Config.distance,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  const accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy\n  }\n\n  const proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + proximity / distance\n}\n\nfunction convertMaskToIndices(\n  matchmask = [],\n  minMatchCharLength = Config.minMatchCharLength\n) {\n  let indices = [];\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices\n}\n\n// Machine word size\nconst MAX_BITS = 32;\n\nfunction search(\n  text,\n  pattern,\n  patternAlphabet,\n  {\n    location = Config.location,\n    distance = Config.distance,\n    threshold = Config.threshold,\n    findAllMatches = Config.findAllMatches,\n    minMatchCharLength = Config.minMatchCharLength,\n    includeMatches = Config.includeMatches,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))\n  }\n\n  const patternLen = pattern.length;\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length;\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen));\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = expectedLocation;\n\n  // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n  const computeMatches = minMatchCharLength > 1 || includeMatches;\n  // A mask of the matches, used for building the indices\n  const matchMask = computeMatches ? Array(textLen) : [];\n\n  let index;\n\n  // Get all exact matches, here for speed up\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    let score = computeScore(pattern, {\n      currentLocation: index,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      let i = 0;\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  let lastBitArr = [];\n  let finalScore = 1;\n  let binMax = patternLen + textLen;\n\n  const mask = 1 << (patternLen - 1);\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0;\n    let binMid = binMax;\n\n    while (binMin < binMid) {\n      const score = computeScore(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n\n      if (score <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    let start = Math.max(1, expectedLocation - binMid + 1);\n    let finish = findAllMatches\n      ? textLen\n      : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << i) - 1;\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1;\n      let charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (i) {\n        bitArr[j] |=\n          ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance,\n          ignoreLocation\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = computeScore(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  const result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    const indices = convertMaskToIndices(matchMask, minMatchCharLength);\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result\n}\n\nfunction createPatternAlphabet(pattern) {\n  let mask = {};\n\n  for (let i = 0, len = pattern.length; i < len; i += 1) {\n    const char = pattern.charAt(i);\n    mask[char] = (mask[char] || 0) | (1 << (len - i - 1));\n  }\n\n  return mask\n}\n\nclass BitapSearch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    this.options = {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return\n    }\n\n    const addChunk = (pattern, startIndex) => {\n      this.chunks.push({\n        pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex\n      });\n    };\n\n    const len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      let i = 0;\n      const remainder = len % MAX_BITS;\n      const end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        const startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  searchIn(text) {\n    const { isCaseSensitive, includeMatches } = this.options;\n\n    if (!isCaseSensitive) {\n      text = text.toLowerCase();\n    }\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      };\n\n      if (includeMatches) {\n        result.indices = [[0, text.length - 1]];\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      ignoreLocation\n    } = this.options;\n\n    let allIndices = [];\n    let totalScore = 0;\n    let hasMatches = false;\n\n    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {\n      const { isMatch, score, indices } = search(text, pattern, alphabet, {\n        location: location + startIndex,\n        distance,\n        threshold,\n        findAllMatches,\n        minMatchCharLength,\n        includeMatches,\n        ignoreLocation\n      });\n\n      if (isMatch) {\n        hasMatches = true;\n      }\n\n      totalScore += score;\n\n      if (isMatch && indices) {\n        allIndices = [...allIndices, ...indices];\n      }\n    });\n\n    let result = {\n      isMatch: hasMatches,\n      score: hasMatches ? totalScore / this.chunks.length : 1\n    };\n\n    if (hasMatches && includeMatches) {\n      result.indices = allIndices;\n    }\n\n    return result\n  }\n}\n\nclass BaseMatch {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n  static isMultiMatch(pattern) {\n    return getMatch(pattern, this.multiRegex)\n  }\n  static isSingleMatch(pattern) {\n    return getMatch(pattern, this.singleRegex)\n  }\n  search(/*text*/) {}\n}\n\nfunction getMatch(pattern, exp) {\n  const matches = pattern.match(exp);\n  return matches ? matches[1] : null\n}\n\n// Token: 'file\n\nclass ExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'exact'\n  }\n  static get multiRegex() {\n    return /^=\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^=(.*)$/\n  }\n  search(text) {\n    const isMatch = text === this.pattern;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !fire\n\nclass InverseExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!(.*)$/\n  }\n  search(text) {\n    const index = text.indexOf(this.pattern);\n    const isMatch = index === -1;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: ^file\n\nclass PrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'prefix-exact'\n  }\n  static get multiRegex() {\n    return /^\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !^fire\n\nclass InversePrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-prefix-exact'\n  }\n  static get multiRegex() {\n    return /^!\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = !text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: .file$\n\nclass SuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'suffix-exact'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = text.endsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [text.length - this.pattern.length, text.length - 1]\n    }\n  }\n}\n\n// Token: !.file$\n\nclass InverseSuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-suffix-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^!(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = !text.endsWith(this.pattern);\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\nclass FuzzyMatch extends BaseMatch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    super(pattern);\n    this._bitapSearch = new BitapSearch(pattern, {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    });\n  }\n  static get type() {\n    return 'fuzzy'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^(.*)$/\n  }\n  search(text) {\n    return this._bitapSearch.searchIn(text)\n  }\n}\n\n// Token: 'file\n\nclass IncludeMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'include'\n  }\n  static get multiRegex() {\n    return /^'\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^'(.*)$/\n  }\n  search(text) {\n    let location = 0;\n    let index;\n\n    const indices = [];\n    const patternLen = this.pattern.length;\n\n    // Get all exact matches\n    while ((index = text.indexOf(this.pattern, location)) > -1) {\n      location = index + patternLen;\n      indices.push([index, location - 1]);\n    }\n\n    const isMatch = !!indices.length;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices\n    }\n  }\n}\n\n// ❗Order is important. DO NOT CHANGE.\nconst searchers = [\n  ExactMatch,\n  IncludeMatch,\n  PrefixExactMatch,\n  InversePrefixExactMatch,\n  InverseSuffixExactMatch,\n  SuffixExactMatch,\n  InverseExactMatch,\n  FuzzyMatch\n];\n\nconst searchersLen = searchers.length;\n\n// Regex to split by spaces, but keep anything in quotes together\nconst SPACE_RE = / +(?=([^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nconst OR_TOKEN = '|';\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nfunction parseQuery(pattern, options = {}) {\n  return pattern.split(OR_TOKEN).map((item) => {\n    let query = item\n      .trim()\n      .split(SPACE_RE)\n      .filter((item) => item && !!item.trim());\n\n    let results = [];\n    for (let i = 0, len = query.length; i < len; i += 1) {\n      const queryItem = query[i];\n\n      // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n      let found = false;\n      let idx = -1;\n      while (!found && ++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isMultiMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue\n      }\n\n      // 2. Handle single query matches (i.e, once that are *not* quoted)\n      idx = -1;\n      while (++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isSingleMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          break\n        }\n      }\n    }\n\n    return results\n  })\n}\n\n// These extended matchers can return an array of matches, as opposed\n// to a singl match\nconst MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass ExtendedSearch {\n  constructor(\n    pattern,\n    {\n      isCaseSensitive = Config.isCaseSensitive,\n      includeMatches = Config.includeMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      ignoreLocation = Config.ignoreLocation,\n      findAllMatches = Config.findAllMatches,\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance\n    } = {}\n  ) {\n    this.query = null;\n    this.options = {\n      isCaseSensitive,\n      includeMatches,\n      minMatchCharLength,\n      findAllMatches,\n      ignoreLocation,\n      location,\n      threshold,\n      distance\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  static condition(_, options) {\n    return options.useExtendedSearch\n  }\n\n  searchIn(text) {\n    const query = this.query;\n\n    if (!query) {\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n\n    const { includeMatches, isCaseSensitive } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n\n    let numMatches = 0;\n    let allIndices = [];\n    let totalScore = 0;\n\n    // ORs\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n      const searchers = query[i];\n\n      // Reset indices\n      allIndices.length = 0;\n      numMatches = 0;\n\n      // ANDs\n      for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {\n        const searcher = searchers[j];\n        const { isMatch, indices, score } = searcher.search(text);\n\n        if (isMatch) {\n          numMatches += 1;\n          totalScore += score;\n          if (includeMatches) {\n            const type = searcher.constructor.type;\n            if (MultiMatchSet.has(type)) {\n              allIndices = [...allIndices, ...indices];\n            } else {\n              allIndices.push(indices);\n            }\n          }\n        } else {\n          totalScore = 0;\n          numMatches = 0;\n          allIndices.length = 0;\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (numMatches) {\n        let result = {\n          isMatch: true,\n          score: totalScore / numMatches\n        };\n\n        if (includeMatches) {\n          result.indices = allIndices;\n        }\n\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n}\n\nconst registeredSearchers = [];\n\nfunction register(...args) {\n  registeredSearchers.push(...args);\n}\n\nfunction createSearcher(pattern, options) {\n  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    let searcherClass = registeredSearchers[i];\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options)\n    }\n  }\n\n  return new BitapSearch(pattern, options)\n}\n\nconst LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\n\nconst KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nconst isExpression = (query) =>\n  !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n\nconst isPath = (query) => !!query[KeyType.PATH];\n\nconst isLeaf = (query) =>\n  !isArray(query) && isObject(query) && !isExpression(query);\n\nconst convertToExplicit = (query) => ({\n  [LogicalOperator.AND]: Object.keys(query).map((key) => ({\n    [key]: query[key]\n  }))\n});\n\n// When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\nfunction parse(query, options, { auto = true } = {}) {\n  const next = (query) => {\n    let keys = Object.keys(query);\n\n    const isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query))\n    }\n\n    if (isLeaf(query)) {\n      const key = isQueryPath ? query[KeyType.PATH] : keys[0];\n\n      const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))\n      }\n\n      const obj = {\n        keyId: createKeyId(key),\n        pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj\n    }\n\n    let node = {\n      children: [],\n      operator: keys[0]\n    };\n\n    keys.forEach((key) => {\n      const value = query[key];\n\n      if (isArray(value)) {\n        value.forEach((item) => {\n          node.children.push(next(item));\n        });\n      }\n    });\n\n    return node\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query)\n}\n\n// Practical scoring function\nfunction computeScore$1(\n  results,\n  { ignoreFieldNorm = Config.ignoreFieldNorm }\n) {\n  results.forEach((result) => {\n    let totalScore = 1;\n\n    result.matches.forEach(({ key, norm, score }) => {\n      const weight = key ? key.weight : null;\n\n      totalScore *= Math.pow(\n        score === 0 && weight ? Number.EPSILON : score,\n        (weight || 1) * (ignoreFieldNorm ? 1 : norm)\n      );\n    });\n\n    result.score = totalScore;\n  });\n}\n\nfunction transformMatches(result, data) {\n  const matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return\n  }\n\n  matches.forEach((match) => {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return\n    }\n\n    const { indices, value } = match;\n\n    let obj = {\n      indices,\n      value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction format(\n  results,\n  docs,\n  {\n    includeMatches = Config.includeMatches,\n    includeScore = Config.includeScore\n  } = {}\n) {\n  const transformers = [];\n\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n\n  return results.map((result) => {\n    const { idx } = result;\n\n    const data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach((transformer) => {\n        transformer(result, data);\n      });\n    }\n\n    return data\n  })\n}\n\nclass Fuse {\n  constructor(docs, options = {}, index) {\n    this.options = { ...Config, ...options };\n\n    if (\n      this.options.useExtendedSearch &&\n      !true\n    ) {\n      throw new Error(EXTENDED_SEARCH_UNAVAILABLE)\n    }\n\n    this._keyStore = new KeyStore(this.options.keys);\n\n    this.setCollection(docs, index);\n  }\n\n  setCollection(docs, index) {\n    this._docs = docs;\n\n    if (index && !(index instanceof FuseIndex)) {\n      throw new Error(INCORRECT_INDEX_TYPE)\n    }\n\n    this._myIndex =\n      index ||\n      createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn\n      });\n  }\n\n  add(doc) {\n    if (!isDefined(doc)) {\n      return\n    }\n\n    this._docs.push(doc);\n    this._myIndex.add(doc);\n  }\n\n  remove(predicate = (/* doc, idx */) => false) {\n    const results = [];\n\n    for (let i = 0, len = this._docs.length; i < len; i += 1) {\n      const doc = this._docs[i];\n      if (predicate(doc, i)) {\n        this.removeAt(i);\n        i -= 1;\n        len -= 1;\n\n        results.push(doc);\n      }\n    }\n\n    return results\n  }\n\n  removeAt(idx) {\n    this._docs.splice(idx, 1);\n    this._myIndex.removeAt(idx);\n  }\n\n  getIndex() {\n    return this._myIndex\n  }\n\n  search(query, { limit = -1 } = {}) {\n    const {\n      includeMatches,\n      includeScore,\n      shouldSort,\n      sortFn,\n      ignoreFieldNorm\n    } = this.options;\n\n    let results = isString(query)\n      ? isString(this._docs[0])\n        ? this._searchStringList(query)\n        : this._searchObjectList(query)\n      : this._searchLogical(query);\n\n    computeScore$1(results, { ignoreFieldNorm });\n\n    if (shouldSort) {\n      results.sort(sortFn);\n    }\n\n    if (isNumber(limit) && limit > -1) {\n      results = results.slice(0, limit);\n    }\n\n    return format(results, this._docs, {\n      includeMatches,\n      includeScore\n    })\n  }\n\n  _searchStringList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { records } = this._myIndex;\n    const results = [];\n\n    // Iterate over every string in the index\n    records.forEach(({ v: text, i: idx, n: norm }) => {\n      if (!isDefined(text)) {\n        return\n      }\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        results.push({\n          item: text,\n          idx,\n          matches: [{ score, value: text, norm, indices }]\n        });\n      }\n    });\n\n    return results\n  }\n\n  _searchLogical(query) {\n\n    const expression = parse(query, this.options);\n\n    const evaluate = (node, item, idx) => {\n      if (!node.children) {\n        const { keyId, searcher } = node;\n\n        const matches = this._findMatches({\n          key: this._keyStore.get(keyId),\n          value: this._myIndex.getValueForItemAtKeyId(item, keyId),\n          searcher\n        });\n\n        if (matches && matches.length) {\n          return [\n            {\n              idx,\n              item,\n              matches\n            }\n          ]\n        }\n\n        return []\n      }\n\n      /*eslint indent: [2, 2, {\"SwitchCase\": 1}]*/\n      switch (node.operator) {\n        case LogicalOperator.AND: {\n          const res = [];\n          for (let i = 0, len = node.children.length; i < len; i += 1) {\n            const child = node.children[i];\n            const result = evaluate(child, item, idx);\n            if (result.length) {\n              res.push(...result);\n            } else {\n              return []\n            }\n          }\n          return res\n        }\n        case LogicalOperator.OR: {\n          const res = [];\n          for (let i = 0, len = node.children.length; i < len; i += 1) {\n            const child = node.children[i];\n            const result = evaluate(child, item, idx);\n            if (result.length) {\n              res.push(...result);\n              break\n            }\n          }\n          return res\n        }\n      }\n    };\n\n    const records = this._myIndex.records;\n    const resultMap = {};\n    const results = [];\n\n    records.forEach(({ $: item, i: idx }) => {\n      if (isDefined(item)) {\n        let expResults = evaluate(expression, item, idx);\n\n        if (expResults.length) {\n          // Dedupe when adding\n          if (!resultMap[idx]) {\n            resultMap[idx] = { idx, item, matches: [] };\n            results.push(resultMap[idx]);\n          }\n          expResults.forEach(({ matches }) => {\n            resultMap[idx].matches.push(...matches);\n          });\n        }\n      }\n    });\n\n    return results\n  }\n\n  _searchObjectList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { keys, records } = this._myIndex;\n    const results = [];\n\n    // List is Array<Object>\n    records.forEach(({ $: item, i: idx }) => {\n      if (!isDefined(item)) {\n        return\n      }\n\n      let matches = [];\n\n      // Iterate over every key (i.e, path), and fetch the value at that key\n      keys.forEach((key, keyIndex) => {\n        matches.push(\n          ...this._findMatches({\n            key,\n            value: item[keyIndex],\n            searcher\n          })\n        );\n      });\n\n      if (matches.length) {\n        results.push({\n          idx,\n          item,\n          matches\n        });\n      }\n    });\n\n    return results\n  }\n  _findMatches({ key, value, searcher }) {\n    if (!isDefined(value)) {\n      return []\n    }\n\n    let matches = [];\n\n    if (isArray(value)) {\n      value.forEach(({ v: text, i: idx, n: norm }) => {\n        if (!isDefined(text)) {\n          return\n        }\n\n        const { isMatch, score, indices } = searcher.searchIn(text);\n\n        if (isMatch) {\n          matches.push({\n            score,\n            key,\n            value: text,\n            idx,\n            norm,\n            indices\n          });\n        }\n      });\n    } else {\n      const { v: text, n: norm } = value;\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        matches.push({ score, key, value: text, norm, indices });\n      }\n    }\n\n    return matches\n  }\n}\n\nFuse.version = '6.4.6';\nFuse.createIndex = createIndex;\nFuse.parseIndex = parseIndex;\nFuse.config = Config;\n\n{\n  Fuse.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\nexport default Fuse;\n","import { default as clui } from \"../clui\";\nimport Fuse from \"fuse.js\";\nexport default function (root, query) {\n    let cmd;\n    if (root instanceof clui)\n        return root.fuse.search(query).map(el => el.item);\n    else\n        cmd = root.type === 'cmd' && root.children ? root.children : [];\n    const flatten = (commands) => {\n        let result = [];\n        for (let command of commands) {\n            result.push(command);\n            if (command.type === 'cmd' && command.children)\n                result = result.concat(flatten(command.children));\n        }\n        return result;\n    };\n    let list = flatten(cmd);\n    const options = {\n        keys: [\n            'name',\n            'description'\n        ]\n    };\n    const fuse = new Fuse(list, options);\n    return fuse.search(query).map(el => el.item);\n}\n","import { __awaiter } from \"tslib\";\nimport convert from './lib/converter';\nimport parse from './lib/parser';\nimport match from './lib/matcher';\nimport run from './lib/runner';\nimport search from './lib/searcher';\nimport Fuse from 'fuse.js';\nexport class Command {\n    constructor(obj, recursive = true) {\n        if (recursive)\n            obj = convert(obj);\n        Object.keys(obj).forEach(key => {\n            this[key] = obj[key];\n        });\n    }\n}\nexport class Arg {\n    constructor(obj) {\n        this.name = obj.name;\n        this.description = obj.description;\n        this.type = obj.type;\n        this.mode = obj.mode;\n        this.required = obj.required;\n        this.value = obj.value;\n    }\n}\nexport default class CLUI {\n    constructor() {\n        this.parse = parse;\n        this.match = match;\n        this.run = run;\n        this.search = search;\n        this.parseMatch = (str, root) => match(root !== null && root !== void 0 ? root : this, parse(str));\n        this.commands = [];\n        this.fuse = new Fuse(this.commands);\n        this.updateFuse = () => {\n            const flatten = (commands) => {\n                let result = [];\n                for (let command of commands) {\n                    result.push(command);\n                    if (command.type === 'cmd' && command.children)\n                        result = result.concat(flatten(command.children));\n                }\n                return result;\n            };\n            let list = flatten(this.commands);\n            const options = {\n                keys: [\n                    'name',\n                    'description'\n                ]\n            };\n            this.fuse = new Fuse(list, options);\n        };\n    }\n    load(...commands) {\n        for (let command of commands) {\n            this.commands.push(new Command(command));\n        }\n        this.updateFuse();\n    }\n    loadURL(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = (yield import(url)).default;\n            if (Array.isArray(result)) {\n                for (let command of result) {\n                    this.commands.push(command);\n                }\n            }\n            else {\n                this.commands.push(result);\n            }\n            this.updateFuse();\n        });\n    }\n    getLastCommand(tokens) {\n        for (let i = tokens.length - 1; i >= 0; i--) {\n            if (tokens[i] instanceof Command)\n                return tokens[i];\n        }\n        return undefined;\n    }\n    stateful(root) {\n        var _a;\n        if (root === undefined)\n            root = new Command({ name: 'h', type: 'cmd', children: (_a = this.commands) !== null && _a !== void 0 ? _a : [] });\n        return {\n            parse,\n            match: (tokens) => match(root, tokens),\n            run: (tokens) => run(root, tokens),\n            search: (query) => search(root, query)\n        };\n    }\n}\n;\n","<!-- fake warning -->\r\n<svelte:options tag=\"clui-main\" immutable={true} />\r\n\r\n<script lang=\"ts\">\r\n\timport commands from './tests/clui_many_commands';\r\n\timport type { Command, Arg } from './clui';\r\n\timport CLUI from './clui';\r\n\tconst clui = new CLUI();\r\n\r\n\t// @ts-expect-error\r\n\twindow.clui = clui;\r\n\tclui.load(...commands);\r\n\tconst stateful = clui.stateful();\r\n\r\n\tlet current = [];\r\n\tlet list: Command[] = [];\r\n\tlet selection = 0;\r\n\r\n\tlet focus = false;\r\n\r\n\tconst search = (e: Event) => {\r\n\t\tconst value: string | null = (e.target as HTMLInputElement)?.value;\r\n\t\tif (value) {\r\n\t\t\tlist = stateful.search(value);\r\n\t\t} else if (focus) {\r\n\t\t\tlist = clui.commands;\r\n\t\t} else {\r\n\t\t\tlist = [];\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<div id=\"clui-fragment\">\r\n\t<div class=\"cli\">\r\n\t\t<div class=\"input\">\r\n\t\t\t<input type=\"text\" placeholder=\"Enter a command\" on:keyup={search} on:focus={()=>focus=true} on:blur={()=>focus=false}>\r\n\t\t</div>\r\n\t\t<div class=\"dropdown\">\r\n\t\t\t{#each list as item, i}\r\n\t\t\t\t<div class=\"dropdown-item {i === selection ? 'selected' : ''}\" on:mouseover={()=>selection = i}>\r\n\t\t\t\t\t<span class=\"item-name\">{item.name}</span>\r\n\t\t\t\t\t<span class=\"item-description\">{item.description ?? ''}</span>\r\n\t\t\t\t</div>\r\n\t\t\t{/each}\r\n\t\t</div>\r\n\t\t<div class=\"form\"></div>\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\t#clui-fragment, #clui-fragment * {\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\t#clui-fragment {\r\n\t--dark: hsl(225, 32%, 13%);\r\n\t--darker: hsl(225, 35%, 9%);\r\n\t--darkest: hsl(225, 38%, 6%);\r\n\t--light: hsl(225, 35%, 36%);\r\n\t--medium: hsl(225, 31%, 18%);\r\n\t--text-light: hsl(225, 54%, 89%);\r\n\t--text-medium: hsl(225, 33%, 64%);\r\n\t\tbackground-color: var(--darkest);\r\n\t\tcolor: var(--text-medium);\r\n\t\tfont-size: 1.3rem;\r\n\t\tfont-family: Calibri, sans-serif;\r\n\t}\r\n\r\n\t#clui-fragment {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\t\r\n\t.input {\r\n\t\tposition: relative;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tborder: 2px solid var(--medium);\r\n\t\tborder-radius: 3px 3px 0 0;\r\n\t\tbackground-color: var(--dark);\r\n\t}\r\n\r\n\t.input > input {\r\n\t\tposition: relative;\r\n\t\tz-index: 1;\r\n\t\tflex: 1;\r\n\t\tpadding: 0.6rem 0.4rem;\r\n\t\toutline: none;\r\n\t\tborder: none;\r\n\t\tbackground-color: transparent;\r\n\t\tcolor: var(--text-light);\r\n\t\tfont-size: inherit;\r\n\t\tfont-family: Calibri, sans-serif;\r\n\t}\r\n\r\n\t.dropdown {\r\n\t\toverflow-y: auto;\r\n\t\tmin-width: 40vw;\r\n\t\tmax-width: 60vw;\r\n\t\tmax-height: 40vh;\r\n\t\tborder-radius: 0 0 3px 3px;\r\n\t\tbackground-color: var(--darker);\r\n\t}\r\n\t.dropdown-item {\r\n\t\tposition: relative;\r\n\t\tz-index: 1;\r\n\t\tpadding: 0.6rem 1.2rem;\r\n\t\tpadding-left: 2.2rem;\r\n\t\tborder-radius: 3px;\r\n\t\tbackground-color: var(--darker);\r\n\t}\r\n\t.dropdown-item.selected {\r\n\t\toutline: 2px solid var(--light);\r\n\t\toutline-offset: -2px;\r\n\t\tbackground-color: var(--light);\r\n\t\tbackground-color: var(--medium);\r\n\t\tcolor: var(--text-light);\r\n\t\tcursor: pointer;\r\n\t}\r\n\t.item-name {\r\n\t\tmargin-right: 0.3rem;\r\n\t\tmargin-left: -0.5rem;\r\n\t\tpadding: 0.3rem 0.5rem;\r\n\t\tborder: 2px solid var(--light);\r\n\t\tborder-radius: 3px;\r\n\t}\r\n\t.selected > .item-name {\r\n\t\tbackground-color: var(--light);\r\n\t}\r\n</style>"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","not_equal","a","b","current_component","is_hydrating","upper_bound","low","high","key","value","mid","append","target","node","hydrate_init","children","childNodes","m","Int32Array","length","p","longest","i","seqLen","idx","claim_order","newLen","Math","max","lis","toMove","last","cur","push","reverse","sort","j","anchor","insertBefore","init_hydrate","undefined","actual_end_child","parentElement","firstChild","nextSibling","parentNode","appendChild","insert","detach","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","attribute_to_object","attributes","result","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","ctx","after_update","outroing","make_dirty","then","fill","init","instance","create_fragment","props","parent_component","bound","on_mount","on_destroy","on_disconnect","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","l","c","intro","block","delete","local","customElement","new_on_destroy","map","filter","mount_component","SvelteElement","HTMLElement","constructor","super","this","attachShadow","mode","connectedCallback","slotted","attributeChangedCallback","_oldValue","newValue","disconnectedCallback","$destroy","detaching","d","destroy_component","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","description","required","args","done","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","e","rejected","apply","convert","cmd","Command","list","item","Arg","Tokens","parse","input","cursor","tokens","peek","charAt","eof","croak","err","isId","ch","test","isFlag","isStr","isNum","token","val","assign","start","end","take","id","Boolean","flag","Error","decimal","num","Number","root","_a","clui","commands","argIndex","find","el","slice","unknown","match","CLUI","success","output","command","allRequired","isArray","getTag","isString","isNumber","isBoolean","isObject","isObjectLike","isDefined","isBlank","trim","prototype","toString","call","hasOwn","hasOwnProperty","KeyStore","_keys","_keyMap","totalWeight","createKey","weight","get","keyId","toJSON","JSON","stringify","path","src","createKeyPath","createKeyId","MISSING_KEY_PROPERTY","INVALID_KEY_WEIGHT_VALUE","split","join","Config","isCaseSensitive","includeScore","shouldSort","sortFn","score","includeMatches","findAllMatches","minMatchCharLength","location","threshold","distance","useExtendedSearch","getFn","arr","deepGet","baseToString","len","ignoreLocation","ignoreFieldNorm","SPACE","FuseIndex","norm","mantissa","cache","pow","numTokens","sqrt","n","parseFloat","round","set","isCreated","setIndexRecords","setSources","docs","records","setKeys","_keysMap","doc","docIndex","_addString","_addObject","size","removeAt","getValueForItemAtKeyId","record","v","$","keyIndex","subRecords","stack","nestedArrIndex","subRecord","k","createIndex","myIndex","computeScore","pattern","errors","currentLocation","expectedLocation","accuracy","proximity","abs","MAX_BITS","search","patternAlphabet","patternLen","textLen","min","currentThreshold","bestLocation","computeMatches","matchMask","lastBitArr","finalScore","binMax","mask","binMin","binMid","floor","finish","bitArr","charMatch","isMatch","indices","matchmask","convertMaskToIndices","createPatternAlphabet","char","BitapSearch","toLowerCase","chunks","addChunk","startIndex","alphabet","remainder","substr","searchIn","allIndices","totalScore","hasMatches","BaseMatch","isMultiMatch","getMatch","multiRegex","isSingleMatch","singleRegex","exp","matches","FuzzyMatch","_bitapSearch","IncludeMatch","searchers","startsWith","endsWith","searchersLen","SPACE_RE","MultiMatchSet","ExtendedSearch","query","results","queryItem","found","searcher","parseQuery","condition","_","numMatches","qLen","pLen","registeredSearchers","createSearcher","searcherClass","LogicalOperator","KeyType","isExpression","convertToExplicit","LogicalOperator_AND","auto","isQueryPath","isPath","isLeaf","LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY","operator","transformMatches","refIndex","transformScore","Fuse","_keyStore","setCollection","_docs","_myIndex","remove","predicate","getIndex","limit","_searchStringList","_searchObjectList","_searchLogical","EPSILON","computeScore$1","transformers","transformer","format","expression","evaluate","_findMatches","res","child","resultMap","expResults","fuse","flatten","concat","version","parseIndex","config","register","recursive","parseMatch","str","updateFuse","load","loadURL","url","import","default","getLastCommand","stateful","iterations","window","selection","focus"],"mappings":"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"}